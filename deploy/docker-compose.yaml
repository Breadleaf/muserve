services:
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/storage
    ports:
      - "9000:9000" # api port
      - "9001:9001" # console port
    command: ["server", "/storage", "--console-address", ":9001"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:17-alpine3.22
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: myapp_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init.sql:/docker-entrypoint-initdb.d/00_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d myapp_dev"]
      interval: 5s
      timeout: 3s
      retries: 20

  nginx:
    image: nginx:alpine
    depends_on:
      - app
      - auth
    ports:
      #- "80:80"
      #- "443:443"
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs:ro
    restart: unless-stopped

  # storage:

  auth_state:
    build:
      context: ../auth_state/
      dockerfile: Dockerfile
    volumes:
      - auth_sock:/sockets
      - auth_state:/state
    environment:
      SOCK_PATH: /sockets/refresh_state.sock
      STATE_PATH: /state/refresh_state.json
      REFRESH_TTL_DAYS: "14"
    command: ["python", "state_server.py"]
    healthcheck:
      test: ["CMD-SHELL", "test -S /sockets/refresh_state.sock"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  auth:
    build:
      context: ../auth/
      dockerfile: Dockerfile
    environment:
      JWT_KEY: "change-me"
      AUDIENCE: "muserve-api"
      ISSUER: "https://yourdomain"
      SOCK_PATH: /sockets/refresh_state.sock
      ACTION_TTL_MIN: "10"
      DATABASE_URL: postgresql://devuser:devpass@postgres:5432/myapp_dev
      JWT_ALG: "HS256"
      BOOTSTRAP_ADMIN_NAME: "admin"
      BOOTSTRAP_ADMIN_EMAIL: "admin"
      BOOTSTRAP_ADMIN_PASSWORD: "admin"
    volumes:
      - auth_sock:/sockets:rw
    #ports:
    #  - "7000:7000"
    command: ["gunicorn", "app:server"]
    depends_on:
      auth_state:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7000/auth/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  app:
    build:
      context: ../app/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      auth:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://devuser:devpass@postgres:5432/myapp_dev
      AUTH_BASE_URL: http://auth:7000/auth
      APP_SECRET_KEY: "dev-change-me"
    working_dir: /app
    #volumes:
    #  - ./:/app:rw
    command: ["gunicorn", "app:server"]
    #ports:
    #  - "8000:8000"

volumes:
  postgres_data:
  minio_data:
  auth_sock:
  auth_state:
