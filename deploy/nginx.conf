# http to https redirect
server {
	listen 80;
	server_name _;
	# TODO: change this in deployment
	return 301 https://$host:8443$request_uri;
}

server {
	listen 443 ssl;
	http2 on;
	server_name _;

	ssl_certificate     /etc/nginx/certs/server.crt;
	ssl_certificate_key /etc/nginx/certs/server.key;


	client_max_body_size 200m;

	# make /auth (no slash) canonical
	location = /auth { return 301 /auth/; }

	location /auth/ {
		proxy_pass http://auth:7000/auth/;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# make the refresh cookie path match the /auth prefix
		proxy_cookie_path /refresh /auth/refresh;
	}

	location /store/ {
		proxy_pass http://storage_handler:5000/store/;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /media/ {
		proxy_pass http://minio:9000/;
		proxy_set_header Host $host;
		proxy_set_header Range $http_range;
		proxy_set_header If-Range $http_if_range;
		proxy_buffering off; # lowers seek latency
	}

	location / {
		proxy_pass http://app:8000/;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_redirect off;
	}
}
