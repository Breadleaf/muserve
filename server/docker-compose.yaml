services:
#  storage:
#    image: minio/minio
#    environment:
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    volumes:
#      - minio_data:/storage
#    ports:
#      - "9000:9000" # console port
#      - "9001:9001" # api port
#    command: ["server", "/storage", "--console-address", ":9001"]
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#      start_period: 10s

  db:
    image: postgres:17-alpine3.22
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: myapp_dev
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db_init.sql:/docker-entrypoint-initdb.d/00_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d myapp_dev"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://devuser:devpass@db:5432/myapp_dev
      # LOCAL_MODE: " " # TODO: remove when testing with database enabled
      LOCAL_MODE: ""
    working_dir: /app
    volumes:
      - ./:/app:rw
    command: ["gunicorn", "app:server"]
    # command: ["python", "main.py"]
    ports:
      - "8000:8000"

volumes:
  pg_data:
  # minio_data:
